// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hotstone-seo/hotstone-seo/pkg/oauth2google (interfaces: AuthService)

// Package mock_oauth2google is a generated GoMock package.
package mock_oauth2google

import (
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo"
	reflect "reflect"
)

// MockAuthService is a mock of AuthService interface
type MockAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceMockRecorder
}

// MockAuthServiceMockRecorder is the mock recorder for MockAuthService
type MockAuthServiceMockRecorder struct {
	mock *MockAuthService
}

// NewMockAuthService creates a new mock instance
func NewMockAuthService(ctrl *gomock.Controller) *MockAuthService {
	mock := &MockAuthService{ctrl: ctrl}
	mock.recorder = &MockAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthService) EXPECT() *MockAuthServiceMockRecorder {
	return m.recorder
}

// GetAuthCodeURL mocks base method
func (m *MockAuthService) GetAuthCodeURL(arg0 echo.Context, arg1 bool) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthCodeURL", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAuthCodeURL indicates an expected call of GetAuthCodeURL
func (mr *MockAuthServiceMockRecorder) GetAuthCodeURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthCodeURL", reflect.TypeOf((*MockAuthService)(nil).GetAuthCodeURL), arg0, arg1)
}

// VerifyCallback mocks base method
func (m *MockAuthService) VerifyCallback(arg0 echo.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyCallback", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyCallback indicates an expected call of VerifyCallback
func (mr *MockAuthServiceMockRecorder) VerifyCallback(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyCallback", reflect.TypeOf((*MockAuthService)(nil).VerifyCallback), arg0, arg1)
}
