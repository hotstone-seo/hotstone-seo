openapi: 3.0.1
info:
  title: Swagger Rulestore
  description: ''
  version: 0.0.1
servers:
- url: https://hotstone.test
- url: http://hotstone.test
tags:
- name: Rule
  description: Rule Entity
- name: Locale
  description: Locale Entity
- name: DataSource
  description: DataSource Entity
- name: Tag
  description: Tag Entity
- name: Article
  description: Article Entity
- name: Provider
  description: Provider-side API
- name: Server
  description: Server-side API
paths:
  /tags:
    get:
      tags:
      - Tag
      summary: List of existing locale
      responses:
        200:
          description: OK
      x-codegen-request-body-name: body
    put:
      tags:
      - Tag
      summary: Update an existing rule
      requestBody:
        description: locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - Tag
      summary: Add a new locale to the store
      requestBody:
        description: Locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /tags/{id}:
    get:
      tags:
      - Tag
      summary: Find rule by ID
      description: Returns a single rule
      parameters:
      - name: id
        in: path
        description: ID of rule to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
    delete:
      tags:
      - Tag
      summary: Deletes a rule
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Rule id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
  /articles:
    get:
      tags:
      - Article
      summary: List of existing locale
      responses:
        200:
          description: OK
      x-codegen-request-body-name: body
    put:
      tags:
      - Article
      summary: Update an existing rule
      requestBody:
        description: locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - Article
      summary: Add a new locale to the store
      requestBody:
        description: Locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /articles/{id}:
    get:
      tags:
      - Article
      summary: Find rule by ID
      description: Returns a single rule
      parameters:
      - name: id
        in: path
        description: ID of rule to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
    delete:
      tags:
      - Article
      summary: Deletes a rule
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Rule id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
  /datasources:
    get:
      tags:
      - DataSource
      summary: List of existing locale
      responses:
        200:
          description: OK
      x-codegen-request-body-name: body
    put:
      tags:
      - DataSource
      summary: Update an existing rule
      requestBody:
        description: locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locale'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - DataSource
      summary: Add a new locale to the store
      requestBody:
        description: Locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locale'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /datasources/{id}:
    get:
      tags:
      - DataSource
      summary: Find rule by ID
      description: Returns a single rule
      parameters:
      - name: id
        in: path
        description: ID of rule to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
    delete:
      tags:
      - DataSource
      summary: Deletes a rule
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Rule id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
  /locale:
    get:
      tags:
      - Locale
      summary: List of existing locale
      responses:
        200:
          description: OK
      x-codegen-request-body-name: body
    put:
      tags:
      - Locale
      summary: Update an existing rule
      requestBody:
        description: locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locale'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - Locale
      summary: Add a new locale to the store
      requestBody:
        description: Locale object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locale'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /locale/{id}:
    get:
      tags:
      - Locale
      summary: Find rule by ID
      description: Returns a single rule
      parameters:
      - name: id
        in: path
        description: ID of rule to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
    delete:
      tags:
      - Locale
      summary: Deletes a rule
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Rule id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
  /rule:
    get:
      tags:
      - Rule
      summary: List of existing rule
      responses:
        200:
          description: OK
      x-codegen-request-body-name: body
    put:
      tags:
      - Rule
      summary: Update an existing rule
      requestBody:
        description: Rule object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - Rule
      summary: Add a new rule to the store
      requestBody:
        description: Rule object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /rule/{id}:
    get:
      tags:
      - Rule
      summary: Find rule by ID
      description: Returns a single rule
      parameters:
      - name: id
        in: path
        description: ID of rule to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
    delete:
      tags:
      - Rule
      summary: Deletes a rule
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Rule id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Rule not found
          content: {}
  /server/addMetaTag:
    post:
      tags:
      - Server
      summary: uploads an image
      responses:
        200:
          description: successful operation
  /server/addTitleTag:
    post:
      tags:
      - Server
      summary: uploads an image
      responses:
        200:
          description: successful operation
  /server/addCanonicalTag:
    post:
      tags:
      - Server
      summary: uploads an image
      responses:
        200:
          description: successful operation
  /server/addScriptTag:
    post:
      tags:
      - Server
      summary: uploads an image
      responses:
        200:
          description: successful operation
  /server/addArticle:
    post:
      tags:
      - Server
      summary: uploads an image
      responses:
        200:
          description: successful operation
  /provider/matchRule:
    post:
      tags:
      - Provider
      responses:
        200:
          description: successful operation
  /provider/retrieveData:
    post:
      tags:
      - Provider
      responses:
        200:
          description: successful operation
  /provider/tags:
    get:
      tags:
      - Provider
      responses:
        200:
          description: successful operation
  /provider/articles:
    get:
      tags:
      - Provider
      responses:
        200:
          description: successful operation
components:
  schemas:
    Rule:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: airport
        pattern:
          type: string
          example: /airport/:id
    Locale:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lang_code:
          type: string
        country_code:
          type: string
    DataSource:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        url:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        rule_id:
          type: integer
          format: int64
        locale_id:
          type: integer
          format: int64
        type:
          type: string
        attributes:
          type: string
        value:
          type: string
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
        rule_id:
          type: integer
          format: int64
        locale_id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
  securitySchemes:
    rulestore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://rulestore.swagger.io/oauth/dialog
          scopes:
            write:rules: modify rules in your account
            read:rules: read your rules
    api_key:
      type: apiKey
      name: api_key
      in: header
