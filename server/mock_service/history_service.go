// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hotstone-seo/hotstone-seo/server/service (interfaces: HistoryService)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHistoryService is a mock of HistoryService interface
type MockHistoryService struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryServiceMockRecorder
}

// MockHistoryServiceMockRecorder is the mock recorder for MockHistoryService
type MockHistoryServiceMockRecorder struct {
	mock *MockHistoryService
}

// NewMockHistoryService creates a new mock instance
func NewMockHistoryService(ctrl *gomock.Controller) *MockHistoryService {
	mock := &MockHistoryService{ctrl: ctrl}
	mock.recorder = &MockHistoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHistoryService) EXPECT() *MockHistoryServiceMockRecorder {
	return m.recorder
}

// RecordHistory mocks base method
func (m *MockHistoryService) RecordHistory(arg0 context.Context, arg1 string, arg2 int64, arg3 interface{}) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecordHistory", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RecordHistory indicates an expected call of RecordHistory
func (mr *MockHistoryServiceMockRecorder) RecordHistory(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordHistory", reflect.TypeOf((*MockHistoryService)(nil).RecordHistory), arg0, arg1, arg2, arg3)
}
