// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hotstone-seo/hotstone-seo/server/urlstore (interfaces: URLStoreSyncRepo)

// Package mock_urlstore is a generated GoMock package.
package mock_urlstore

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	urlstore "github.com/hotstone-seo/hotstone-seo/server/urlstore"
	reflect "reflect"
)

// MockURLStoreSyncRepo is a mock of URLStoreSyncRepo interface
type MockURLStoreSyncRepo struct {
	ctrl     *gomock.Controller
	recorder *MockURLStoreSyncRepoMockRecorder
}

// MockURLStoreSyncRepoMockRecorder is the mock recorder for MockURLStoreSyncRepo
type MockURLStoreSyncRepoMockRecorder struct {
	mock *MockURLStoreSyncRepo
}

// NewMockURLStoreSyncRepo creates a new mock instance
func NewMockURLStoreSyncRepo(ctrl *gomock.Controller) *MockURLStoreSyncRepo {
	mock := &MockURLStoreSyncRepo{ctrl: ctrl}
	mock.recorder = &MockURLStoreSyncRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockURLStoreSyncRepo) EXPECT() *MockURLStoreSyncRepoMockRecorder {
	return m.recorder
}

// Find mocks base method
func (m *MockURLStoreSyncRepo) Find(arg0 context.Context) ([]*urlstore.URLStoreSync, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0)
	ret0, _ := ret[0].([]*urlstore.URLStoreSync)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find
func (mr *MockURLStoreSyncRepoMockRecorder) Find(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockURLStoreSyncRepo)(nil).Find), arg0)
}

// FindOne mocks base method
func (m *MockURLStoreSyncRepo) FindOne(arg0 context.Context, arg1 int64) (*urlstore.URLStoreSync, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindOne", arg0, arg1)
	ret0, _ := ret[0].(*urlstore.URLStoreSync)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindOne indicates an expected call of FindOne
func (mr *MockURLStoreSyncRepoMockRecorder) FindOne(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOne", reflect.TypeOf((*MockURLStoreSyncRepo)(nil).FindOne), arg0, arg1)
}

// GetLatestVersion mocks base method
func (m *MockURLStoreSyncRepo) GetLatestVersion(arg0 context.Context) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestVersion", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestVersion indicates an expected call of GetLatestVersion
func (mr *MockURLStoreSyncRepoMockRecorder) GetLatestVersion(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestVersion", reflect.TypeOf((*MockURLStoreSyncRepo)(nil).GetLatestVersion), arg0)
}

// GetListDiff mocks base method
func (m *MockURLStoreSyncRepo) GetListDiff(arg0 context.Context, arg1 int64) ([]*urlstore.URLStoreSync, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListDiff", arg0, arg1)
	ret0, _ := ret[0].([]*urlstore.URLStoreSync)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListDiff indicates an expected call of GetListDiff
func (mr *MockURLStoreSyncRepoMockRecorder) GetListDiff(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListDiff", reflect.TypeOf((*MockURLStoreSyncRepo)(nil).GetListDiff), arg0, arg1)
}

// Insert mocks base method
func (m *MockURLStoreSyncRepo) Insert(arg0 context.Context, arg1 urlstore.URLStoreSync) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert
func (mr *MockURLStoreSyncRepoMockRecorder) Insert(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockURLStoreSyncRepo)(nil).Insert), arg0, arg1)
}
